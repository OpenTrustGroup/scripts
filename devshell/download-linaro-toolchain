#!/bin/bash
# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

### download Linaro toolchains

source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"/lib/vars.sh

readonly TOOLCHAIN_ROOT="${FUCHSIA_DIR}/toolchains"
readonly AARCH64_PATH="${TOOLCHAIN_ROOT}/aarch64"
readonly AARCH64_CROSS_COMPILE="${AARCH64_PATH}/bin/aarch64-linux-gnu-"
readonly AARCH64_GCC_VERSION="gcc-linaro-6.2.1-2016.11-x86_64_aarch64-linux-gnu"
readonly SRC_AARCH64_GCC="https://releases.linaro.org/components/toolchain/binaries/6.2-2016.11/aarch64-linux-gnu/${AARCH64_GCC_VERSION}.tar.xz"

set -eo pipefail; [[ "${TRACE}" ]] && set -x

declare CLEAN="${CLEAN:-false}"

usage() {
  printf '%s: [-c]\n' "$0"
  printf '  -c            clean & download\n'
}

while getopts "ch" opt; do
  case "${opt}" in
    c) CLEAN="true" ;;
    h) usage ; exit 0 ;;
    *) usage 1>&2 ; exit 1 ;;
  esac
done

if [[ "${CLEAN}" = "true" ]]; then
  echo "Cleaning toolchains..."
  rm -rf -- "${TOOLCHAIN_ROOT}"
fi

mkdir -p ${AARCH64_PATH}

if [ ! -f "${TOOLCHAIN_ROOT}/${AARCH64_GCC_VERSION}.tar.xz" ]; then
  echo "Downloading ${AARCH64_GCC_VERSION} ..."
  curl -s -L ${SRC_AARCH64_GCC} -o ${TOOLCHAIN_ROOT}/${AARCH64_GCC_VERSION}.tar.xz
  tar xf ${TOOLCHAIN_ROOT}/${AARCH64_GCC_VERSION}.tar.xz -C ${AARCH64_PATH} --strip-components=1
fi

# Update toolchain config file
cat >"${TOOLCHAIN_CONFIG}" <<END
# Generated by "fx download-linaro-toolchain".
LINARO_AARCH64_CROSS_COMPILE=${AARCH64_CROSS_COMPILE}
END
