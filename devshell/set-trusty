#!/bin/bash
# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

### set trusty build configuration

## usage: fx set-trusty TARGET [--ccache]
##
## Sets trusty build options.
##
## required arguments:
##   TARGET                Target platform or project
##
## optional arguments:
##   --ccache              Whether to use ccache during the build. Ccache attempts
##                         to make builds faster by caching build artifacts.

source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"/lib/vars.sh
fx-config-read-if-present

declare -A alias_projects=(
  ["arm32"]="generic-arm32-test"
  ["arm64"]="generic-arm64-test"
)

declare project_list="$(ls ${FUCHSIA_DIR}/trusty/device/arm/generic-arm64/project/*.mk | xargs -I{} basename -s .mk {})"

function list_projects {
  echo ""
  echo "available projects:"
  echo "-------------------"
  for alias in "${!alias_projects[@]}"; do
    printf "%-25s (alias of %s)\n" "${alias}" "${alias_projects["${alias}"]}"
  done

  for p in ${project_list}; do
    printf "%-25s\n" "${p}"
  done
}

function search_projects {
  for alias in "${!alias_projects[@]}"; do
    if [[ "${alias}" = "${1}" ]]; then
      echo "${alias_projects["${alias}"]}"
      return 0
    fi
  done

  for p in ${project_list}; do
    if [[ "${p}" = "${1}" ]]; then
      echo "${p}"
      return 0
    fi
  done

  echo ""
}

function main {
  if [[ $# -lt 1 ]]; then
    list_projects
    return 1
  fi

  local trusty_project="$(search_projects $1)"

  if [[ -z "${trusty_project}" ]]; then
    echo error: Unsupported project \"${1}\"
    list_projects
    return 1
  fi

  local ccache=
  while [[ $# -ne 0 ]]; do
    case $1 in
      --ccache)
        ccache=1
        ;;
    esac
    shift
  done

  # Update print-vars if you add or remove anything from this list.
  cat >"${FUCHSIA_CONFIG}" <<END
# Generated by "fx set-trusty".
TRUSTY_PROJECT="${trusty_project}"
USE_CCACHE="${ccache}"
TEE="trusty"
END
}

main "$@"
