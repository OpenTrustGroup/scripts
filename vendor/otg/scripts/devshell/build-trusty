#!/bin/bash
# Copyright 2018 Open Trust Group
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

### build Google Trusty Secure OS

source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"/lib/vars.sh
otg-read-config

readonly TRUSTY_PATH="${OTG_ROOT_DIR}/trusty_repos"
readonly TRUSTY_BUILDROOT="${OTG_TEE_OUT_DIR}"

JOBS=`getconf _NPROCESSORS_ONLN` || {
  Cannot get number of processors
  exit 1
}

set -eo pipefail; [[ "${TRACE}" ]] && set -x


declare VERBOSE=0
declare CLEAN_BUILD=0
declare PROJECT="generic-arm64-test"
declare NOECHO="@"

usage() {
  printf '%s: [-c] [-v] [-l] [-p project]\n' "$0"
  printf '  -c            clean & build\n'
  printf '  -v            show verbose compiling messages\n'
  printf '  -l            list projects\n'
  printf '  -p [project]  select which project to build, default: %s\n' "${PROJECT}"
}

while getopts "chp:vl" opt; do
  case "${opt}" in
    c) CLEAN_BUILD=1 ;;
    h) usage ; exit 0 ;;
    p) PROJECT="${OPTARG}" ;;
    v) VERBOSE=1 ;;
    l) cd ${TRUSTY_PATH} ; make list ; exit 0 ;;
    *) usage 1>&2 ; exit 1 ;;
  esac
done

if [[ "${USE_CCACHE}" = "1" ]]; then
  export CCACHE="$(which ccache)"
fi

if [[ ${VERBOSE} -eq 1 ]]; then
  NOECHO=""
fi

# Download source code if not existed
if [[ ! -d "${TRUSTY_PATH}" ]]; then
  mkdir -p ${TRUSTY_PATH}
  cd ${TRUSTY_PATH}
  repo init -u https://android.googlesource.com/trusty/manifest.git
  repo sync -c --no-tags --no-clone-bundle -j${JOBS}
fi

# Trusty makefile can auto probe toolchain path by 'which xxx' shell command
export PATH=${TRUSTY_ARM64_TOOLCHAIN_PATH}/bin:${TRUSTY_ARM32_TOOLCHAIN_PATH}/bin:${PATH}

if [[ ${CLEAN_BUILD} -eq 1 ]]; then
  echo "Deleting ${TRUSTY_BUILDROOT}..."
  rm -rf -- "${TRUSTY_BUILDROOT}"
fi

echo "Building trusty..."
cd ${TRUSTY_PATH}
source trusty/vendor/google/aosp/scripts/envsetup.sh

BUILDROOT=${TRUSTY_BUILDROOT} \
DEFAULT_PROJECT=${PROJECT} \
NOECHO=${NOECHO} \
make -j${JOBS} all
